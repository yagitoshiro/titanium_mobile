---
name: Titanium.Android.Service
summary: The Titanium binding of an Android service.
description: |
    This object can be used to start or stop a service directly and listen for service-specific events.  

    From a JavaScript-based service, this can be referenced with <Titanium.Android.currentService>.  

    Use the <Titanium.Android.createService> method to create an instance of a service.

    See also [Service](http://developer.android.com/reference/android/app/Service.html)
    in the Android Developer Reference.
extends: Titanium.Proxy
platforms: [android]
since: "1.5"
methods:
  - name: start
    summary: Starts the Service.  
    description: |
        Effective only if this instance of <Titanium.Android.Service> was created 
        with <Titanium.Android.createService>.

  - name: stop
    summary: Stops this running instance of the Service.

events:

  - name: pause
    summary: |
        For Javascript-based services that you create, `pause` fires after each time the JavaScript 
        code executes.  
    description: |
        The `resume` and `pause` events occur in pairs, with `resume` firing just before your 
        JavaScript service code executes, and `pause` just after.
    properties:
      - name: iteration
        summary: |
            Incrementing integer indicating which iteration of an interval-based Service is pausing. 
            For example, if you have an interval-based Service running every 10 seconds, iteration 
            3 would occur at about 30 seconds after you start the instance (assuming your service 
            code runs quickly).

  - name: resume
    summary: |
        For JavaScript-based Services which you create, `resume` fires each time the JavaScript 
        code executes. 
    description: |
         For example, if your Service runs on an interval of 10000 (10 seconds), you would expect 
         to see `resume` fired every 10 seconds, just as the JavaScript service code you wrote is 
         about to execute.
    properties:
      - name: iteration
        summary: |
            Incrementing integer indicating which iteration of an interval-based Service is pausing. 
            For example, if you have an interval-based Service running every 10 seconds, iteration 
            3 would occur at about 30 seconds after you start the instance (assuming your service 
            code runs quickly).

  - name: start
    summary: Fired when the bound service instance starts.  
    description: |
        Bound service instances are created via <Titanium.Android.createService>.

  - name: stop
    summary: Fired when the bound service instance stops.
    description: |
         The service stops when <Titanium.Android.Service.stop> or
         <Titanium.Android.stopService> is called and there are no more bound, 
         un-stopped clients.

properties:
  - name: intent
    summary: The intent used to start or bind to the Service.
    type: Titanium.Android.Intent
    permission: read-only

  - name: serviceInstanceId
    summary: |
        A service can be started more than once -- this number (based on an incrementing integer) 
        indicates which "start number" in the sequence the current service instance is.
    type: Number
    permission: read-only

examples:
  - title: Hello World Service
    example: |
        This example shows how to create a service in JavaScript.
        Your service code is included in its own JavaScript file.  

        In this example, the service reads data from the <Titanium.Android.Intent> which created it, 
        to see what it should say besides "Hello World".
        
        File: myservice.js:
        
            var service = Titanium.Android.currentService;
            var intent = service.intent;
            var message = intent.getStringExtra("message_to_echo");
            Titanium.API.info("Hello World!  I am a Service.  I have this to say: " + message);
        
        Register the service in tiapp.xml:
        
            <android xmlns:android="http://schemas.android.com/apk/res/android">
                <services>
                    <service url="myservice.js" type="interval"/>
                </services>
            </android>
        
        Code in "regular" Titanium file to launch the service and listen for pause/resume events.  
        Code also stops the service after its code runs 3 times.
        
            var intent = Titanium.Android.createServiceIntent( { url: 'myservice.js' } );
            // Service should run its code every 2 seconds.
            intent.putExtra('interval', 2000);
            // A message that the service should 'echo'
            intent.putExtra('message_to_echo', 'Titanium rocks!');
            
            var service = Titanium.Android.createService(intent);
            service.addEventListener('resume', function(e) {
                Titanium.API.info('Service code resumes, iteration ' + e.iteration);
            });
            service.addEventListener('pause', function(e) {
                Titanium.API.info('Service code pauses, iteration ' + e.iteration);
                if (e.iteration === 3) {
                    Titanium.API.info('Service code has run 3 times, will now stop it.');
                    service.stop();
                }
            });
            service.start();
        
        Console Output:
        
            [INFO] [29,1942] Service code resumes, iteration 1
            [INFO] [70,2029] Hello World! I am a Service. I have this to say: Titanium rocks!
            [INFO] [3,2070] Service code pauses, iteration 1
            [INFO] [2,3915] Service code resumes, iteration 2
            [INFO] [31,3961] Hello World! I am a Service. I have this to say: Titanium rocks!
            [INFO] [5,3968] Service code pauses, iteration 2
            [INFO] [2,5917] Service code resumes, iteration 3
            [INFO] [27,5961] Hello World! I am a Service. I have this to say: Titanium rocks!
            [INFO] [16,5980] Service code pauses, iteration 3
            [INFO] [1,5981] Service code has run 3 times, will now stop it.
        
    
