---
name: Titanium.Blob
summary: A container for binary data.
description: |
    A `Blob` represents a chunk of binary information, often obtained through 
    an [HTTPClient](Titanium.Network.HTTPClient) or by reading a [File](Titanium.Filesystem.File). 

    Blobs are often used to store text or image data. 
    The `Blob` object includes a number of properties and methods specific to image blobs.

    Android and Mobile Web support an [append](Titanium.Blob.append) method, but
    otherwise blobs are immutable. 

    The <Titanium.Utils> module provides several utility methods for working with 
    blobs, including methods for converting between blobs and Base64-encoded strings,
    and methods for generating SHA-1 and SHA-256 hashes and MD5 digests from blob data.
    
    The [Buffer](Titanium.Buffer) object can also contain binary data, and is
    more easily mutable. Extracting blob data to a buffer is somewhat roundabout:

        var blobStream = Ti.Stream.createStream({ source: myBlob, mode: Ti.Stream.MODE_READ });
        var newBuffer = Ti.createBuffer({ length: myBlob.length });
        var bytes = blobStream.read(newBuffer);
               
    Creating a blob from a buffer is much easier:
        
        var newBlob = myBuffer.toBlob();
        
    In both cases, the conversion involves copying the data from one object to another, so 
    you should be conscious of the amount of the data being copied.

extends: Titanium.Proxy
since: "0.9"
platforms: [android, iphone, ipad, mobileweb]
createable: false
properties:

  - name: file
    type: Titanium.Filesystem.File
    summary: |
        File object represented by this blob, or `null` if this blob is not
        associated with a file.
    permission: read-only

  - name: length
    type: Number
    summary: Length of this blob in bytes.
    permission: read-only

  - name: text
    type: String
    summary: UTF-8 string representation of the data in this blob. 
    description: |
        If this blob represents pure binary data, the value will be `null`.
    permission: read-only

  - name: mimeType
    type: String
    summary: Mime type of the data in this blob.
    permission: read-only

  - name: height
    type: Number
    summary: If this blob represents an image, this is the height of the image in pixels. 
    description: |
        If this blob doesn't represent an image, `height` is 0.

        On Mobile Web, the `height` is not available until the image loads. It is advised 
        to set a timeout to wait for the image to load before accessing the `height`.
        
    permission: read-only

  - name: width
    type: Number
    summary: If this blob represents an image, this is the width of the image in pixels. 
    description: |
        If this blob doesn't represent an image, `height` is 0.

        On Mobile Web, the `width` is not available until the image loads. It is advised to set a timeout 
        to wait for the image to load before accessing the `width`.
    permission: read-only

  - name: nativePath
    type: String
    summary: |
        If this blob represents a [File](Titanium.Filesystem.File), this is the file URL
        that represents it.
    description: |
        If this blob doesn't represent a file, the value of `nativePath` is `null`. 
    permission: read-only

  - name: size
    type: Number
    summary: |
        Size of the blob in pixels (for image blobs) or bytes (for all other blobs).
    description: |
        If this blob represents an image, this is the total number of pixels in the image.
        Otherwise it returns the number of bytes in the binary data.

        On Mobile Web, always returns the number of bytes of the blob. Note that internally, 
        binary data is stored base64 encoded and `size` represents the number of bytes before 
        base64 encoding.
    platforms: [iphone, ipad, mobileweb]
    permission: read-only

methods:

  - name: toString
    returns:
        type: String
    summary: Returns a string representation of this blob.
    description: |
        On Mobile Web, if the blob is binary, `toString` returns a base64 encoded data URI.

  - name: append
    summary: Appends the data from another blob to this blob.
    platforms: [android, mobileweb]
    parameters:
      - name: blob
        type: Titanium.Blob
        summary: Blob to append to this blob.

  - name: imageAsCropped
    summary: Creates a new blob by cropping the underlying image to the specified dimensions.
    description: |
        Returns the cropped image as a blob.

        If this blob doesn't represent an image, returns `null`.
    platforms: [android, iphone, ipad]
    since: {android: "2.2.0"}
    parameters:
      - name: options
        summary: Image cropping options.
        type: Dictionary<ImageAsCroppedDict>
    returns:
        type: Titanium.Blob
        summary: Cropped image as a blob.

  - name: imageAsResized
    summary: Creates a new blob by resizing and scaling the underlying image to the specified dimensions.
    description: |
        Returns the resized image as a blob.

        If this blob doesn't represent an image, returns `null`.
    platforms: [android, iphone, ipad]
    since: {android: "2.2.0"}
    parameters:
      - name: width
        type: Number
        summary: Width to resize this image to.
      - name: height
        type: Number
        summary: Height to resize this image to.
    returns:
        type: Titanium.Blob
        summary: Resized image as a blob.

  - name: imageAsThumbnail
    summary: Returns a thumbnail version of the underlying image, optionally with a border and rounded corners.
    description: |
        Returns the thumbnail image as a blob.

        If this blob doesn't represent an image, returns `null`.
    platforms: [android, iphone, ipad]
    since: {android: "2.2.0"}
    returns:
        type: Titanium.Blob
        summary: The image thumbnail in a blob.
    parameters:

      - name: size
        type: Number
        summary: Size of the thumbnail, in either width or height.

      - name: borderSize
        type: Number
        summary: Width of the thumbnail's border.
        optional: true
        default: 1

      - name: cornerRadius
        type: Number
        summary: Radius of the thumbnail's corners.
        optional: true
        default: 0

  - name: imageWithAlpha
    summary: Returns a copy of the underlying image with an added alpha channel.
    description: |
        Returns the new image as a blob, or `null` if this blob is not an image.
    platforms: [android, iphone, ipad]
    since: {android: "2.2.0"}
    returns:
        type: Titanium.Blob
        summary: The image with an alpha channel in a blob, or `null` if this blob is not an image.

  - name: imageWithRoundedCorner
    summary: Returns a copy of the underlying image with rounded corners added.
    description: |
        Returns the new image as a blob, or `null` if this blob is not an image.
    platforms: [android, iphone, ipad]
    since: {android: "2.2.0"}
    parameters:
      - name: cornerSize
        type: Number
        summary: Size of the rounded corners in pixels.
      - name: borderSize
        type: Number
        summary: Width of the border in pixels.
        optional: true
        default: 1
    returns:
        type: Titanium.Blob
        summary: Image with a rounded corner in a blob, or `null` if this blob is not an image.

  - name: imageWithTransparentBorder
    summary: Returns a copy of the underlying image with an added transparent border.
    description: |
        Returns the new image as a blob, or `null` if this blob is not an image.
    platforms: [android, iphone, ipad]
    since: {android: "2.2.0"}
    parameters:
      - name: size
        type: Number
        summary: Width of the transparent border in pixels.
    returns:
        type: Titanium.Blob
        summary: The image with a transparent border in a blob, or `null` if this blob is not an image.
---
name: ImageAsCroppedDict
summary: Simple object used to specify options for [imageAsCropped](Titanium.Blob.imageAsCropped).
properties:
  - name: width
    type: Number
    summary: Width to crop this image to.
    optional: true
    default: Current image width.

  - name: height
    type: Number
    summary: Height to crop this image to.
    optional: true
    default: Current image height.

  - name: x
    type: Number
    summary: Left coordinate of the cropped rectangle within the source image.
    optional: true
    default: Cropped rectangle is centered horizontally on the original image.

  - name: y
    type: Number
    summary: Top coordinate of the cropped rectangle within the source image.
    optional: true
    default: Cropped rectangle is centered vertically on the original image.
