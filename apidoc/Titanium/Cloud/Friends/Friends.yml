name: Titanium.Cloud.Friends
summary: Provides methods for accessing ACS friends.
extends: Titanium.Module
excludes: { methods: [ 'addEventListener', 'fireEvent', 'removeEventListener',  ] }

methods:
  - name: add
    summary: Add friends to the current user.
    description: |
        Requires user login. 

        See [Friends: Add Friends](http://cloud.appcelerator.com/docs/api/v1/friends/add)
        for the request parameters supported by this method.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary

      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudFriendsResponse>

  - name: requests
    summary: View pending friend requests.
    description: |
        Requires user login. 

        See [Friends: Show Friend Requests](http://cloud.appcelerator.com/docs/api/v1/friends/requests)
        for the request parameters supported by this method.

        Data is returned in the `friend_requests` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary

      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudFriendRequestsResponse>

  - name: approve
    summary: Approve existing friend requests.
    description: |
        Requires user login.

        See [Friends: Approve Friend Requests](http://cloud.appcelerator.com/docs/api/v1/friends/approve)
        for the request parameters supported by this method.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary

      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudFriendsResponse>

  - name: remove
    summary: Removes one or more friends from the current user.
    description: |
        Requires user login.

        See [Friends: Remove Friends](http://cloud.appcelerator.com/docs/api/v1/friends/remove)
        for the request parameters supported by this method.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary

      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudFriendsResponse>

  - name: search
    summary: Retrieve a list of friends.
    description: |
        Requires user login.

        See [Friends: Search Friends](http://cloud.appcelerator.com/docs/api/v1/friends/search)
        for the request parameters supported by this method.

        Data is returned in the `users` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary

      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudFriendsResponse>

examples:
  - title: Add a friend
    example: |
        This example adds a friend and checks the response.

            Cloud.Friends.add({
                user_ids: checked.join(",")
            }, function (e) {
                if (e.success) {
                    alert('Friend(s) added');
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });

  - title: Show friend requests
    example: |
        This example shows pending friend requests and checks the response.

            Cloud.Friends.requests(function (e) {
                if (e.success) {
                    alert('Success:\\n' +
                        'Count: ' + e.friend_requests.length);
                    for (var i = 0; i < e.friend_requests.length; i++) {
                        var user = e.friend_requests[i].user;
                        alert('id: ' + user.id + '\\n' +
                            'first name: ' + user.first_name + '\\n' +
                            'last name: ' + user.last_name);
                    }
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });

  - title: Approve friend requests
    example: |
        This example approves pending friend requests and checks the response.

            Cloud.Friends.approve({
                user_ids: checked.join(",")
            }, function (e) {
                if (e.success) {
                    alert('Friend(s) approved');
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });

  - title: Remove friends
    example: |
        This example removes friends and checks the response.

            Cloud.Friends.remove({
                user_ids: checked.join(",")
            }, function (e) {
                if (e.success) {
                    alert('Friend(s) removed');
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });

  - title: Search for friends
    example: |
        This example requests information about particular friends and checks the response.

            Cloud.Friends.search({
                user_id: searchID
            }, function (e) {
                if (e.success) {
                    alert('Success:\\n' +
                        'Count: ' + e.users.length);
                    for (var i = 0; i < e.users.length; i++) {
                        var user = e.users[i];
                        alert('id: ' + user.id + '\\n' +
                            'first name: ' + user.first_name + '\\n' +
                            'last name: ' + user.last_name);
                    }
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });

---
name: CloudFriendsResponse
summary: Argument passed to the callback when a request finishes successfully or erroneously.
extends: CloudResponse
properties:
  - name: users
    summary: Set of `user` objects, if any exist.
    description: Only included if `success` is `true`.
    type: Array<Dictionary>

---
name: CloudFriendRequestsResponse
summary: Argument passed to the callback when a request finishes successfully or erroneously.
extends: CloudResponse
properties:
  - name: friend_requests
    summary: Set of `user` objects, if any exist.
    description: Only included if `success` is `true`.
    type: Array<Dictionary>
