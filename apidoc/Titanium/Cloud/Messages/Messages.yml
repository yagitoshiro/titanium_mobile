name: Titanium.Cloud.Messages
summary: Provides methods for accessing ACS messages.
extends: Titanium.Module
excludes: { methods: [ 'addEventListener', 'fireEvent', 'removeEventListener',  ] }

methods:
  - name: create
    summary: Create a message.
    description: |
        Requires user login. 
        
        See [Messages: Send a Message](http://cloud.appcelerator.com/docs/api/v1/messages/create)
        for the request parameters supported by this method.
        
        Data is returned in the `messages` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary
        
      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudMessagesResponse>
  
  - name: reply
    summary: Reply to all recipients of a message.
    description: |
        See [Messages: Reply to a Message](http://cloud.appcelerator.com/docs/api/v1/messages/reply)
        for the request parameters supported by this method.
        
        Data is returned in the `messages` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary
        optional: true
        
      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudMessagesResponse>

  - name: show
    summary: Retrieve information about a message.
    description: |
        See [Messages: Show a Message](http://cloud.appcelerator.com/docs/api/v1/messages/show)
        for the request parameters supported by this method.
        
        Data is returned in the `messages` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary
        
      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudMessagesResponse>

  - name: showInbox
    summary: Retrieve a list of messages in the current user's inbox.
    description: |
        See [Messages: Show User's Inbox Messages](http://cloud.appcelerator.com/docs/api/v1/messages/inbox)
        for the request parameters supported by this method.

        Data is returned in the `messages` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary

      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudMessagesResponse>

  - name: showSent
    summary: Retrieve a list of messages in the current user's inbox.
    description: |
        See [Messages: Show User's Sent Messages](http://cloud.appcelerator.com/docs/api/v1/messages/sent)
        for the request parameters supported by this method.

        Data is returned in the `messages` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary

      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudMessagesResponse>

  - name: showThreads
    summary: Retrieve a list of message threads in the current users' inbox.
    description: |
        See [Messages: Show User's Message Threads](http://cloud.appcelerator.com/docs/api/v1/messages/threads)
        for the request parameters supported by this method.

        Data is returned in the `messages` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary

      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudMessagesResponse>

  - name: showThread
    summary: Retrieve a list of messages in a thread from the current user's inbox.
    description: |
        See [Messages: Show Messages in a Thread](http://cloud.appcelerator.com/docs/api/v1/messages/thread)
        for the request parameters supported by this method.

        Data is returned in the `messages` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary

      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudMessagesResponse>

  - name: remove
    summary: Delete a message.
    description: |
        Requires user login.

        See [Messages: Delete a Message](http://cloud.appcelerator.com/docs/api/v1/messages/delete)
        for the request parameters supported by this method.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary

      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudMessagesResponse>

  - name: removeThread
    summary: Delete all messages in a thread.
    description: |
        Requires user login.

        See [Messages: Delete All Messages in a Thread](http://cloud.appcelerator.com/docs/api/v1/messages/delete_thread)
        for the request parameters supported by this method.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary

      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudMessagesResponse>

examples:
  - title: Create Message
    example: |
        This example creates a new message and checks the response.
        
            Cloud.Messages.create({
                to_ids: toSet.ids.join(','),
                body: 'Hello World',
                subject: 'Test Message'
            }, function (e) {
                if (e.success) {
                    var message = e.messages[0];
                    alert('Success:\\n' +
                        'id: ' + message.id + '\\n' +
                        'subject: ' + message.subject + '\\n' +
                        'body: ' + message.body + '\\n' +
                        'updated_at: ' + message.updated_at);
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });
  
  - title: Reply to a Message
    example: |
        This example replies to a message and checks the response.
        
            Cloud.Messages.reply({
                message_id: savedMessageId,
                body: 'Welcome'
            }, function (e) {
                if (e.success) {
                    var message = e.messages[0];
                    alert('Success:\\n' +
                        'id: ' + message.id + '\\n' +
                        'subject: ' + message.subject + '\\n' +
                        'body: ' + message.body + '\\n' +
                        'updated_at: ' + message.updated_at);
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });

  - title: Show a Message
    example: |
        This example retrieves information about a message and checks the response.

            Cloud.Messages.show({
                message_id: savedMessageId
            }, function (e) {
                if (e.success) {
                    var message = e.messages[0];
                    alert('Success:\\n' +
                        'id: ' + message.id + '\\n' +
                        'subject: ' + message.subject + '\\n' +
                        'body: ' + message.body + '\\n' +
                        'updated_at: ' + message.updated_at);
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });

  - title: Show Inbox Messages
    example: |
        This example requests a list of messages in the inbox and checks the response.

            Cloud.Messages.showInbox(function (e) {
                if (e.success) {
                    alert('Success:\\n' +
                        'Count: ' + e.messages.length);
                    for (var i = 0; i < e.messages.length; i++) {
                        var message = e.messages[i];
                        alert('Success:\\n' +
                            'id: ' + message.id + '\\n' +
                            'subject: ' + message.subject + '\\n' +
                            'body: ' + message.body + '\\n' +
                            'updated_at: ' + message.updated_at);
                    }
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });

  - title: Show Sent Messages
    example: |
        This example requests a list of messages that have been sent and checks the response.

            Cloud.Messages.showSent(function (e) {
                if (e.success) {
                    alert('Success:\\n' +
                        'Count: ' + e.messages.length);
                    for (var i = 0; i < e.messages.length; i++) {
                        var message = e.messages[i];
                        alert('Success:\\n' +
                            'id: ' + message.id + '\\n' +
                            'subject: ' + message.subject + '\\n' +
                            'body: ' + message.body + '\\n' +
                            'updated_at: ' + message.updated_at);
                    }
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });

  - title: Show Message Threads
    example: |
        This example requests a list of message threads and checks the response.

            Cloud.Messages.showThreads(function (e) {
                if (e.success) {
                    alert('Success:\\n' +
                        'Count: ' + e.messages.length);
                    for (var i = 0; i < e.messages.length; i++) {
                        var message = e.messages[i];
                        alert('Success:\\n' +
                            'id: ' + message.id + '\\n' +
                            'thread id: ' + message.thread_id + '\\n' +
                            'subject: ' + message.subject + '\\n' +
                            'body: ' + message.body + '\\n' +
                            'updated_at: ' + message.updated_at);
                    }
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });

  - title: Show Thread Messages
    example: |
        This example requests a list of messages in a thread and checks the response.

            Cloud.Messages.showThread({
                thread_id: savedThreadId
            }, function (e) {
                if (e.success) {
                    alert('Success:\\n' +
                        'Count: ' + e.messages.length);
                    for (var i = 0; i < e.messages.length; i++) {
                        var message = e.messages[i];
                        alert('Success:\\n' +
                            'id: ' + message.id + '\\n' +
                            'thread id: ' + message.thread_id + '\\n' +
                            'subject: ' + message.subject + '\\n' +
                            'body: ' + message.body + '\\n' +
                            'updated_at: ' + message.updated_at);
                    }
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });

  - title: Remove a Message
    example: |
        This example deletes a message and checks the response.
        
            Cloud.Messages.remove({
                message_id: savedMessageId
            }, function (e) {
                if (e.success) {
                    alert('Removed');
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });

  - title: Remove Thread Messages
    example: |
        This example deletes all messages in a thread and checks the response.

            Cloud.Messages.removeThread({
                thread_id: savedThreadId
            }, function (e) {
                if (e.success) {
                    alert('Removed');
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });

---
name: CloudMessagesResponse
summary: Argument passed to the callback when a request finishes successfully or erroneously.
extends: CloudResponse
properties:
  - name: messages
    summary: Set of `message` objects, if any exist.
    description: Only included if `success` is `true`.
    type: Array<Dictionary>
