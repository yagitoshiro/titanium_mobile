name: Titanium.Cloud.Statuses
summary: Provides methods for accessing ACS Statuses.
extends: Titanium.Module
excludes: { methods: [ 'addEventListener', 'fireEvent', 'removeEventListener',  ] }

methods:
  - name: create
    summary: Creates a status for the currently logged in user.
    description: |
        Requires user login. 
        
        See [Users: Create a Status](http://cloud.appcelerator.com/docs/api/v1/statuses/create)
        for the request parameters supported by this method.
        
        Data is returned in the `statuses` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary
        
      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudStatusesResponse>
  
  - name: query
    summary: Retrieve a list of statuses with sorting and pagination.
    description: |
        See [Statuses: Custom Query Status](http://cloud.appcelerator.com/docs/api/v1/statuses/query)
        for the request parameters supported by this method.
        
        Data is returned in the `statuses` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary
        optional: true
        
      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudStatusesResponse>
  
  - name: search
    summary: Retrieve the statuses for a user.
    description: |
        See [Users: Show Statuses for a User](http://cloud.appcelerator.com/docs/api/v1/statuses/show)
        for the request parameters supported by this method.
        
        Data is returned in the `statuses` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary
        
      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudStatusesResponse>

examples:
  - title: Create a Status
    example: |
        This example creates a status and checks the response.
        
            Cloud.Statuses.create({
                place_id: myPlaceId,
                message: 'What a great view!',
                photo: Titanium.Filesystem.getFile('photo.jpg')
            }, function (e) {
                if (e.success) {
                    var status = e.statuses[0];
                    alert('Success:\\n' +
                        'id: ' + status.id + '\\n' +
                        'place: ' + status.place.name);
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });
  
  - title: Search Status
    example: |
        This example requests information about a user's status and checks the response.
        
            Cloud.Statuses.search({
                user_id: someUserId
            }, function (e) {
                if (e.success) {
                    alert('Success:\\n' +
                        'Count: ' + e.statuses.length);
                    for (var i = 0; i < e.statuses.length; i++) {
                        var status = e.statuses[i];
                        alert('id: ' + status.id + '\\n' +
                              'message: ' + status.message + '\\n' +
                              'updated_at: ' + status.updated_at);
                    }
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });
  
  - title: Query Status
    example: |
        This example requests information about statuses and checks the response.
        
            Cloud.Statuses.query({
                page: 1,
                per_page: 20,
                order: '-updated_at'
            }, function (e) {
                if (e.success) {
                    for (var i = 0; i < e.statuses.length; i++) {
                        var status = e.statuses[i];
                        alert('Success:\\n' +
                           'id: ' + status.id + '\\n' +
                           'message: ' + status.message + '\\n' +
                           'updated_at: ' + status.updated_at);
                     }
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });

---
name: CloudStatusesResponse
summary: Argument passed to the callback when a request finishes successfully or erroneously.
extends: CloudResponse
properties:
  - name: statuses
    summary: Set of `statuses` objects, if any exist.
    description: Only included if `success` is `true`.
    type: Array<Dictionary>
