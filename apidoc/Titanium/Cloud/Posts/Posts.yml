name: Titanium.Cloud.Posts
summary: Provides methods for accessing ACS posts.
extends: Titanium.Module
excludes: { methods: [ 'addEventListener', 'fireEvent', 'removeEventListener',  ] }

methods:
  - name: create
    summary: Create a post.
    description: |
        Requires user login. 
        
        See [Posts: Create Post](http://cloud.appcelerator.com/docs/api/v1/posts/create)
        for the request parameters supported by this method.
        
        Data is returned in the `posts` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary
        
      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudPostsResponse>
  
  - name: query
    summary: Retrieve a list of posts with sorting and pagination.
    description: |
        See [Posts: Custom Query Posts](http://cloud.appcelerator.com/docs/api/v1/posts/query)
        for the request parameters supported by this method.
        
        Data is returned in the `posts` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary
        optional: true
        
      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudPostsResponse>
  
  - name: remove
    summary: Delete a post.
    description: |
        Requires user login. 
        
        See [Posts: Delete a Post](http://cloud.appcelerator.com/docs/api/v1/posts/delete)
        for the request parameters supported by this method.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary
        
      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudPostsResponse>
  
  - name: show
    summary: Retrieve information about a post.
    description: |
        See [Posts: Show a Post](http://cloud.appcelerator.com/docs/api/v1/posts/show)
        for the request parameters supported by this method.
        
        Data is returned in the `posts` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary
        
      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudPostsResponse>
  
  - name: update
    summary: Update the information for a post.
    description: |
        Requires user login. 
        
        See [Posts: Update a Post](http://cloud.appcelerator.com/docs/api/v1/posts/update)
        for the request parameters supported by this method.
        
        Data is returned in the `posts` property of the parameter passed to the callback.
    parameters:
      - name: parameters
        summary: Parameters to send in the request.
        type: Dictionary
        
      - name: callback
        summary: Callback function to execute when the method completes.
        type: Callback<CloudPostsResponse>

examples:
  - title: Create Post
    example: |
        This example creates a new post and checks the response.
        
            Cloud.Posts.create({
                content: 'Man Walks On Moon',
                title: 'News of the day',
                photo: Titanium.Filesystem.getFile('photo.jpg')
            }, function (e) {
                if (e.success) {
                    var post = e.posts[0];
                    alert('Success:\\n' +
                        'id: ' + post.id + '\\n' +
                        'title: ' + post.title + '\\n' +
                        'content: ' + post.content + '\\n' +
                        'updated_at: ' + post.updated_at);
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });
  
  - title: Show a Post
    example: |
        This example retrieves information about a post and checks the response.
        
            Cloud.Posts.show({
                post_id: savedPostId
            }, function (e) {
                if (e.success) {
                    var post = e.posts[0];
                    alert('Success:\\n' +
                        'id: ' + post.id + '\\n' +
                        'title: ' + post.title + '\\n' +
                        'content: ' + post.content + '\\n' +
                        'updated_at: ' + post.updated_at);
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });
  
  - title: Query for Posts
    example: |
        This example requests a list of posts and checks the response.
        
            Cloud.Posts.query({
                page: 1,
                per_page: 20,
                where: {
                    reviews_count: { '$gt': 1.0 }
                }
            }, function (e) {
                if (e.success) {
                    alert('Success:\\n' +
                        'Count: ' + e.posts.length);
                    for (var i = 0; i < e.posts.length; i++) {
                        var post = e.posts[i];
                        alert('id: ' + post.id + '\\n' +
                            'id: ' + post.id + '\\n' +
                            'title: ' + post.title + '\\n' +
                            'content: ' + post.content + '\\n' +
                            'updated_at: ' + post.updated_at);
                    }
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });
  
  - title: Update a Post
    example: |
        This example updates a post and checks the response.
        
            Cloud.Posts.update({
                post_id: savedPostId,
                title: 'Lunar Eclipse'
            }, function (e) {
                if (e.success) {
                    var post = e.posts[0];
                    alert('Success:\\n' +
                        'id: ' + post.id + '\\n' +
                        'title: ' + post.title + '\\n' +
                        'content: ' + post.content + '\\n' +
                        'updated_at: ' + post.updated_at);
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });
  
  - title: Remove a Post
    example: |
        This example deletes a post and checks the response.
        
            Cloud.Posts.remove({
                post_id: savedPostId
            }, function (e) {
                if (e.success) {
                    alert('Success');
                } else {
                    alert('Error:\\n' +
                        ((e.error && e.message) || JSON.stringify(e)));
                }
            });

---
name: CloudPostsResponse
summary: Argument passed to the callback when a request finishes successfully or erroneously.
extends: CloudResponse
properties:
  - name: posts
    summary: Set of `posts` objects, if any exist.
    description: Only included if `success` is `true`.
    type: Array<Dictionary>
