/**
 * Appcelerator Titanium Mobile
 * Copyright (c) 2011 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 */

/** This is generated, do not edit by hand. **/
<#import "ProxyBinding.fm" as Proxy>

#include <jni.h>

#include "Proxy.h"

<@Proxy.openNamespace/>

<#assign className = Proxy.className(proxyClassName)>

class ${className} : public titanium::Proxy
{
public:
	explicit ${className}(jobject javaObject);

	static void bindProxy(v8::Handle<v8::Object> exports);
	static v8::Handle<v8::FunctionTemplate> getProxyTemplate();
	static void dispose();

	static v8::Persistent<v8::FunctionTemplate> proxyTemplate;
	static jclass javaClass;

private:
	// Methods -----------------------------------------------------------
	<@Proxy.listMethods ; isFirst, name, method>
	static v8::Handle<v8::Value> ${method.apiName}(const v8::Arguments&);
	</@Proxy.listMethods>

	// Dynamic property accessors ----------------------------------------
	<@Proxy.listDynamicProperties ; isFirst, name, property, getSignature, setSignature>
	<#if property.get>
	static v8::Handle<v8::Value> getter_${name}(v8::Local<v8::String> property, const v8::AccessorInfo& info);
	</#if>
	<#if property.set>
	static void setter_${name}(v8::Local<v8::String> property, v8::Local<v8::Value> value, const v8::AccessorInfo& info);
	</#if>
	</@Proxy.listDynamicProperties>

	<#if interceptor??>
	static v8::Handle<v8::Value> interceptor(v8::Local<v8::String> property, const v8::AccessorInfo& info);
	</#if>
};

<@Proxy.closeNamespace/>
